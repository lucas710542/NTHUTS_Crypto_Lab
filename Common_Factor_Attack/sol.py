from Crypto.Util.number import *
def egcd(a, b):
    if(a == 0):
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)
n1 = 51195326120256223784037426407978318904290077763469979936302112376637920966401
n2 = 40645676652435698607233058066198582139086680010356055872908920981539767728043
e = 4097
c1 = 49671985008471415958942170253337004560627232756477344346537998536838608265339
c2 = 12047601613686170869906510612325869186968759386311440508053098603191264275426
p2,_,_=egcd(n1,n2)
p1=n1//p2
p3=n2//p2
d1=inverse(e,(p2-1)*(p1-1))
d2=inverse(e,(p2-1)*(p3-1))
m1=pow(c1,d1,n)
m2=pow(c2,d2,n)
print(long_to_bytes(m1).decode())
print(long_to_bytes(m2).decode())
